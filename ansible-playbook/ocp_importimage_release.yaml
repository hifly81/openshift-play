- name: Openshift docker image release
  hosts: localhost
  become: false
  gather_facts: no
  vars:
    master: "{{ openshift_master_url }}" #https://127.0.0.1:8443
    cli: "{{ openshift_cli_command }}" #oc
    user: "{{ openshift_user }}" #developer
    password: "{{ openshift_password }}" #developer
    namespace: "{{ openshift_namespace }}" #test
    docker_image: "{{ openshift_docker_image }}" #mysql
    tag: "{{ openshift_docker_image_tag}}" #1
    app: "{{ openshift_app }}" #apptest
    replicas: "{{ openshift_app_replicas }}" #2
  tasks:
    - name: Openshift authentication
      shell: "{{ cli }} login {{ master }} -u {{ user }} -p {{ password }}"

    - name: Openshift new project
      shell: "{{ cli }} new-project {{ namespace }}"
      ignore_errors: true

    - name: Openshift switch project
      shell: "{{ cli }} project {{ namespace }}"

    - name: Openshift verify imagestreamtag
      shell: "{{ cli }} get imagestreamtag {{ app }}:{{ tag }}"
      register: tag_command_result
      ignore_errors: true

    - name: Openshift verify imagestreamtag check exists
      block:
        - fail:
            msg: "imagestreamtag already exists"
          when: "'sha256' in tag_command_result.stdout"
      rescue:
        - shell: "{{ cli }} logout"
        - meta: end_play

    - name: Openshift delete deployment config
      shell: "{{ cli }} delete deploymentconfig {{ app }}"
      ignore_errors: true

    - name: Openshift delete service
      shell: "{{ cli }} delete service {{ app }}"
      ignore_errors: true

    - name: Openshift delete route
      shell: "{{ cli }} delete route {{ app }}"
      ignore_errors: true

    - name: Openshift delete imagestream
      shell: "{{ cli }} delete imagestream {{ app }}"
      ignore_errors: true

    - name: Openshift import image route
      shell: "{{ cli }} import-image {{ docker_image }}:{{ tag }} --insecure=true --confirm"
      ignore_errors: true

    - name: Openshift new app
      shell: "{{ cli }} new-app --image-stream {{ app }}:{{ tag }} --name={{ app }}"

    - name: Openshift scale app
      shell: "{{ cli }} scale --replicas={{ replicas }} dc {{ app }}"

    - name: Openshift expose service
      shell: "{{ cli }} expose service {{ app }} --name={{ app }}"

    - name: Openshift logout
      shell: "{{ cli }} logout"
